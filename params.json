{"name":"Baseproject","tagline":"","body":"# Base Database and Networking project\r\n\r\n## Motivation\r\nThis project is created with the purpose of provide **basic reusable** structure for Android projects.\r\n\r\n####The project setup contains:\r\nDatabase structure created with **ORM Lite library.** \r\nBasic network setup for server client communication used 3rd party library **Volley Networking library.**\r\nImplement **Google Cloud Messaging** for receiving push notifications. \r\n\r\n### Project documentation reference \r\n[javadoc](http://androiddevei.github.io/android-documentation/apidoc)\r\n\r\n## Code Examples\r\n\r\n#### Simple Volley request\r\n##### Request item from web service\r\n```\r\n   private void requestNetworkData( ){\r\n        RequestQueue queue = VolleySingleton.getRequestQueue();\r\n\r\n        String url = Const.URL_API_REQUEST_CATEGORY_ITEM;\r\n\r\n        StringRequest request = new StringRequest(Request.Method.GET,url,\r\n                responseNetworkDataSuccess(),\r\n                responseError()){\r\n        };\r\n        queue.add(request);\r\n    }\r\n```\r\n#### Simple database request \r\n##### Create the category item\r\n```\r\n public static CategoryItem createRecord(CategoryItem categoryItem){\r\n\r\n        if(categoryItem !=null) {\r\n            try {\r\n                DatabaseManager.getInstance().getCategoryItemsDaoInstance().create(categoryItem);\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }else{\r\n            Log.d(TAG, \"Creating null object\");\r\n        }\r\n        return categoryItem;\r\n    }\r\n\r\n```\r\n#### Register device for Google Cloud Messaging\r\n\r\n        @Override\r\n        protected String doInBackground(Void... params) {\r\n               String msg = \"\";\r\n                try {\r\n                    if (mGoogleCloudMessaging == null) {\r\n                        mGoogleCloudMessaging = GoogleCloudMessaging.getInstance(mActivity);\r\n                    }\r\n\r\n                    regId = mGoogleCloudMessaging.register(Const.PROJECT_NUMBER);\r\n                    if(regId!=null){\r\n\r\n                        mMessage = \"Device registered, registration ID=\" + regId;\r\n                        Log.i(\"GCM\", msg);\r\n\r\n                        // You should send the registration ID to your server over HTTP,\r\n                        // so it can use GCM/HTTP or CCS to send messages to your app.\r\n                        // The request to your server should be authenticated if your app\r\n                        // is using accounts.\r\n                        sendRegistrationIdToBackend();\r\n\r\n\r\n                        // Store the device registration ID in application preferences.\r\n                        // There is no need to register again. Unless the app version is changed\r\n                        // or the registration Id is lost.\r\n                        storeRegistrationId(mContext, regId);\r\n                    }\r\n\r\n                } catch (IOException ex) {\r\n                    mMessage  = \"Error GCM exception :\" + ex.getMessage();\r\n                }\r\n                return mMessage;\r\n}\r\n\r\n### Tests\r\n#### Works on\r\n* Supports devise with API 15 and above\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}